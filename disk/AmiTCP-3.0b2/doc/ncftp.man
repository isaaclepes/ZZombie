


NcFTP(1)                 USER COMMANDS                   NcFTP(1)



NAME
     NcFTP - Internet file transfer program

SYNOPSIS
     ncftp [_p_r_o_g_r_a_m _o_p_t_i_o_n_s] [[_o_p_e_n _o_p_t_i_o_n_s] _h_o_s_t_n_a_m_e[:_p_a_t_h_n_a_m_e]]

DESCRIPTION
     _N_c_F_T_P is a user interface  to  the  Internet  standard  _F_i_l_e
     _T_r_a_n_s_f_e_r  _P_r_o_t_o_c_o_l.   This program allows a user to transfer
     files to and from a remote network site,  and  offers  addi-
     tional  features  that  are not found in the standard inter-
     face, _f_t_p.

FEATURES
     Program options will be explained later  in  this  document.
     Let's  get  down  to  business and go over the features that
     make this program worthwhile.

     Here is the list of section headers;  I  have  my  $MANPAGER
     environment  variable  set  to use ``less -i'' so that I can
     skip to the section I want (otherwise,  /_r_e_g_e_x  commands  to
     the  pager  won't  match  the section headers because of the
     formatting codes; the ``-i'' can search through the  format-
     ting codes)

          Establishing the remote connection
          Format of the RC file
          The Recent-sites file
          Redialing a busy remote site
          Supplying a sitename from your shell's command line
          Using Colon-mode
          Using FTP-cat and FTP-more mode
          Supplying a port number with the open command
          Displaying and changing program variables
          Program variables
          Listing a remote directory
          Viewing a remote directory with your pager
          Redisplaying the last directory listing
          Fetching files from the remote host
          Viewing a remote file with your pager
          Creating a message file on the remote host
          Looking up site names and addresses
          Checking the configuration of the program
          Using the command shell
          Customizing the prompt
          Keeping a log of your file transfers
          Program options
          A sample RC file

Establishing the remote connection
     Just opening a connection to  a  remote  server  was  incon-
     venient  enough  in the stock _f_t_p program to justify writing



NCEMRSoft                 Last change:                          1






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



     this program.  Here at _N_C_E_M_R_S_o_f_t, we want to do our business
     as  quickly  and  painlessly  as possible.  We'd rather save
     time and wear and tear on our metacarpals than bother typing
     entire site names, usernames, and email addresses masquerad-
     ing as passwords, and setting binary mode.

     We  made  all  connections  anonymous  by  default,  and  we
     automatically  send  our  email  address for the password on
     those connections.  We allowed for site names to be abbrevi-
     ated.

     For each commonly accessed site, you can  put  an  entry  in
     your  program  preferences file (let's call it the ``ncftprc
     file'' or ``RC file'' for short).  To open  the  site,  from
     the command shell all you do is type:

          open wuarchive.wustl.edu

     or

          o wuarchive.wustl.edu

     As promised, you can abbreviate that further.  Just use  any
     abbreviation that would match only the site you had in mind.
     For the previous example, you could try:

          o wuarc
          o wustl
          o stl
          o wu

     Any of those abbreviations  would  open  wuarchive.wustl.edu
     anonymously, sending your anon-password (usually set to your
     email address) as the password.  Keep in mind that the  pro-
     gram tries opening the first site that matches the abbrevia-
     tion you supplied.  So:

          o w

     might match a site named  bowser.nintendo.jp  if  that  site
     appeared before your entry for wuarchive.wustl.edu.

     Most of the time we open remote sites anonymously, but there
     are times where you need to specifically open a site with an
     actual username and password.  Let's say  my  partner,  Phil
     Dietz, wants to FTP something out of my account.  Perhaps he
     wants to fetch the latest version  of  the  source  code  to
     _N_c_F_T_P  so  he  can  optimize  something or add a new feature
     behind my  back.   Since  the  program  opens  remote  sites
     anonymously  by  default  (actually,  you  can  change  this
     behavior; more on that later), he would have  to  specify  a
     flag  to  the  _o_p_e_n command so he can supply my username and



NCEMRSoft                 Last change:                          2






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



     password.  He would try:

          o -u sphygmomanometer.unl.edu

     or, more likely:

          o -u sph

     Then the program would prompt him  for  a  username  (login,
     whatever) and a password:

          Login Name (pdietz): mgleason
          Password: ********

     If he got it right, he could raid my stuff.   If  not,  he'd
     probably  drop  me  an  email  asking me to quit changing my
     password so often.

     There are even times where you want to  FTP  from  your  own
     account,  like if you are debugging an FTP client you wrote.
     At this prompt:

          Login Name (mgleason):

     I could just hit return to tell  the  program  that  I  want
     ``mgleason'' as my username, then I would enter my password.

Format of the RC file
     This release of the program is somewhat compatible with  the
     stock _f_t_p program's .netrc file.  However, I can promise you
     that in the near future the program will use a  new  format,
     so don't invest too much time in it.

     The  RC  file  can  be  named  ``ncftprc'',  ``netrc'',   or
     ``.ncftprc'',  but  it is usually named ``.netrc'' so it can
     be used with the stock _f_t_p  program.   _N_c_F_T_P  looks  in  the
     current  working  directory for any of those files, and then
     in your home directory, and after that it gives up (which is
     OK, because RC files aren't mandatory).

     The file usually starts with #_s_e_t and #_u_n_s_e_t  commands  that
     do  things  to  the  programs variables.  The reason for the
     ``#'' is so the stock _f_t_p program will think they  are  com-
     ments.  You might have this appearing as the first few lines
     in your RC file (I'll explain later):

          #set debug 1
          #set pager "less -EMi"
          #unset startup-msg

     After those, you put in machine entries  for  each  of  your
     favorite    sites.     Let's    put    in   an   entry   for



NCEMRSoft                 Last change:                          3






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



     wuarchive.wustl.edu.  First you would put:

          machine wuarchive.wustl.edu

     Then you could put in your username, password,  and  account
     if you like:

          user anonymous
          password -mgleason@cse.unl.edu
          account wuarc.does.not.use.accounts

     Following that, you would add the startup macro that is  run
     each  time you connect to wuarchive.  You must start it with
     this line:

          macdef init

     Then put in the commands you want to do:

          cd /graphics/gif
          ls -lt

     After that, you end the macro  with  a  blank  line  (impor-
     tant!).  The finished machine entry would look like the fol-
     lowing.  To make the transition to the impending new  format
     less painful, I recommend you adhere to this format:

          machine wuarchive.wustl.edu
                user anonymous
                password -mgleason@cse.unl.edu
                account wuarc.does.not.use.accounts
                macdef init
                      cd /graphics/gif
                      ls -lt
                (_m_a_n_d_a_t_o_r_y _b_l_a_n_k _l_i_n_e _t_o _e_n_d _t_h_e _m_a_c_r_o)

     Of  course,  if  all  you  want  to  do  is  open  wuarchive
     anonymously,  you  needn't bother with the ``user'', ``pass-
     word'', and ``account'' lines.  You may want to put them  in
     if  you  plan  on  using the stock _f_t_p program, though.  Try
     something like this:

          machine wuarchive.wustl.edu
                macdef init
                      cd /graphics/gif
                      ls -lt
                (_m_a_n_d_a_t_o_r_y _b_l_a_n_k _l_i_n_e _t_o _e_n_d _t_h_e _m_a_c_r_o)

     You can tell the program to not run the startup macro if you
     supply -i to the _o_p_e_n command.





NCEMRSoft                 Last change:                          4






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



     Really, you should only bother adding entries for sites that
     you  want  to  run startup macros upon connection.  The next
     section explains why.

The Recent-sites file
     Each time you open a site, the program saves the name of the
     site  and the last directory you were in to the _r_e_c_e_n_t-_s_i_t_e_s
     _f_i_l_e which is named .ncrecent and placed in your home direc-
     tory.   The  program  saves  a predetermined number of these
     sites in the file, and when it reaches the  limit,  it  dis-
     cards the oldest entry so it can add a new one.

     You can just go ahead and use the name of the site you  want
     with  the  _o_p_e_n command if you know it is in the _r_e_c_e_n_t-_f_i_l_e
     (and you can abbreviate the name, just like those in the  RC
     file).  But if you cannot remember what the name of the site
     you want, all you do is run the _o_p_e_n command  with  no  site
     parameter:

          open

     This will pop up a list of the sites in the _r_e_c_e_n_t-_f_i_l_e, and
     sites  in  your  RC file.  At the open prompt, just type the
     name (or an abbreviation of that name) or the number preced-
     ing the site name to open that site.  After opening the site
     you wanted, the program sets the remote working directory to
     the same one you left in the last time you called.

     If you don't like the idea of having the  sites  you  called
     stored on disk, you can turn this feature off using an _u_n_s_e_t
     command, explained later.

Redialing a busy remote site
     Some remote sites limit the number of leeches, er, anonymous
     connections  at  a  time to reduce the load on the host com-
     puter.  You can use the _o_p_e_n  command's  redial  feature  to
     keep  attempting connections until you get on, although that
     is not a very polite thing to do.  The simplest  way  to  do
     this would be to just supply the -r option:

          open -r wuarc

     There are also options you can use to tweak redial.  The  -d
     flag  sets  the  delay between dials, and the -g flag sets a
     limit on how many dials should be attempting  before  giving
     up.   If you don't supply -g the program will dial a day and
     forever (which my Number Theory professor, Dr. Mientka, says
     is longer than forever and a day) until it connects success-
     fully, or until you get sick of waiting and hit  the  inter-
     rupt key (usually ^C).





NCEMRSoft                 Last change:                          5






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



     This example dials wuarchive every ten  minutes,  giving  up
     after twenty attempts.  Note that the redial delay is speci-
     fied in seconds:

          open -r -d 600 -g 20 wuarc

     Please be considerate when you use redialing, so  you  won't
     tax  the  network.  Site administrators can and do get angry
     when they get flooded with connections.

Supplying a sitename from your shell's command line
     When you run the program:

          ncftp

     by itself does nothing and waits for you to type commands to
     the  program's  own shell.  Just like the stock _f_t_p program,
     you can supply a site name on the command line:

          ncftp wuarchive.wustl.edu

     You can also use abbreviations as usual:

          ncftp wuarc

     This is equivalent to running the program, then  issuing  an
     _o_p_e_n command to open wuarchive.

Using Colon-mode
     The _o_p_e_n command is not a one-trick pony.  Another option is
     what  I  call _c_o_l_o_n-_m_o_d_e.  This feature is used (most of the
     time) from your shell's command line.

     In ancient times, way back during the Disco era,  you  could
     use a program called _t_f_t_p to fetch a file using the Internet
     standard _T_r_i_v_i_a_l _F_i_l_e _T_r_a_n_s_f_e_r _P_r_o_t_o_c_o_l. You could use  that
     program to do something like this from within its shell:

          get wuarchive.wustl.edu:/graphics/gif/README

     and that would call wuarchive and fetch the README file.

     You can use this program to do  the  same  thing  from  your
     shell's command line:

          csh> ncftp wuarchive.wustl.edu:/graphics/gif/README
          csh> head README

     This tells your shell, in this case the ``c-shell''  to  run
     _N_c_F_T_P,     which     would     open     wuarchive,     fetch
     /graphics/gif/README and write  the  file  ./README  in  the
     current  working directory, and then exits.  This is nice if



NCEMRSoft                 Last change:                          6






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



     you don't want to browse around the  remote  site,  and  you
     know  exactly want you want.  It would also come in handy in
     shell scripts, where you don't want  to  enter  the  command
     shell, and might not want the program to spew output.

     You can use _c_o_l_o_n-_m_o_d_e to set the  starting  remote  working
     directory also:

          csh> ncftp wuarchive.wustl.edu:/graphics/gif

     This would run the program, open wuarchive, and  _c_d  to  the
     gif  directory,  then run the program's command shell so you
     can browse.

     _C_o_l_o_n-_m_o_d_e is also available from within the program's  com-
     mand shell.  At a prompt you can do stuff like this:

          ncftp> open wuarchive.wustl.edu:/graphics/gif/README
          ncftp> o wuarc:/graphics/gif

Using FTP-cat and FTP-more mode
     There are times where you might  not  want  the  program  to
     write a _c_o_l_o_n-_m_o_d_e file in the current working directory, or
     perhaps you want to pipe the output of a  remote  file  into
     something  else.  _C_o_l_o_n-_m_o_d_e has options to do this.  It was
     inspired by the guy who wrote the _f_t_p_c_a_t perl  script.   The
     -c  option tells the program to write on the standard output
     stream.  The -m option pipes the file into your pager  (like
     _m_o_r_e)  Of  course  this  won't  work  if  the thing you give
     _c_o_l_o_n-_m_o_d_e is a directory!  This example just dumps a remote
     file to stdout:

          csh> ncftp -c wuarc:/graphics/gif/README
          ...
          csh>

     This example redirects a remote file into a different  loca-
     tion:

          csh> ncftp -c wu:/README > ~pdietz/thesis.tex

     This one shows how to use a pipeline:

          csh> ncftp -c wuarc:/README | tail | wc -l
          10
          csh>

     This shows how to page a remote file:

          csh> ncftp -m wuarc:/graphics/gif/README
          ...
          csh>



NCEMRSoft                 Last change:                          7






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



Supplying a port number with the open command
     This option just didn't fit anywhere else, so to finish  out
     the  open  command,  -p lets you supply a port number if you
     have to _f_t_p to a site  using  an  nonstandard  port  number.
     Personally,  I  have  yet  to use feature, but its there for
     compatibility with the stock _f_t_p program.

Displaying and changing program variables
     Now I'll explain the commands unique to _N_c_F_T_P.   The  others
     should  perform the same as they would in the stock _f_t_p pro-
     gram; consult  the  man  page  for  it  if  you  want  those
     explained, or use the _h_e_l_p command for a brief blurb.

     The _s_h_o_w command is used to display  program  variables  and
     their values.

          show all

     or

          show

     would display all the variables with their values.

          show _v_a_r_1 _v_a_r_2 ... _v_a_r_N

     would display each specified variable and its value.

     The _s_e_t command changes the value  of  a  program  variable.
     Its syntax is:

          set _v_a_r_n_a_m_e _v_a_l_u_e

     For Boolean or Integer variables,

          set _v_a_r_n_a_m_e

     would set the value of the variable _v_a_r_n_a_m_e to 1 (true).

     The _u_n_s_e_t command can be used to set  the  variable  to  its
     default value, or for Boolean and Integer variables, set the
     value of the variable to 0 (false).  For  String  variables,
     you can use this to set the value to an empty string.

     You can use any of those three commands in both the  command
     shell, or in the RC file with a ``#'' prepended.

Program variables
     Each variable can be one of the following types:

     Boolean:
          Can be ``on'' or ``off'' (you can  also  use  ``1''  or



NCEMRSoft                 Last change:                          8






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



          ``0'').

     Integer:
          Can be any positive or negative number, or 0.

     String:
          Is a string of characters.  If the string needs to have
          a  space in it, make sure you surround the whole string
          with double quotes in a _s_e_t command.

     Variables follow.  Some variables are explained later in the
     relevant sections.

     _a_n_o_n-_o_p_e_n (Boolean)
          Tells whether the default login mode  is  anonymous  if
          on,  or  if  off,  will prompt for a username/password.
          You can always override this by using either -a  or  -u
          with the _o_p_e_n command.

     _a_n_o_n-_p_a_s_s_w_o_r_d (String)
          Sends this as the password when you login  anonymously.
          By default this is your email address.

     _a_n_s_i-_e_s_c_a_p_e_s (Boolean)
          If on, the program can  use  boldface,  underline,  and
          inverse text.

     _a_u_t_o-_b_i_n_a_r_y (Boolean)
          If on, sets the transfer type to  binary  mode  immedi-
          ately after connection.

     _d_e_b_u_g (Integer)
          Sets the debugging level.

     _g_a_t_e_w_a_y-_l_o_g_i_n (String)
          Tells which username to use when  logging  in  to  your
          firewall gateway host.

     _g_a_t_e_w_a_y-_h_o_s_t (String)
          The site which is acting as your firewall  gateway,  or
          empty if you aren't using one.

     _l_o_c_a_l-_d_i_r (String)
          The current local working directory.   I  like  to  set
          this  from my RC file, so all my files go into my down-
          load directory.

     _l_o_g_f_i_l_e (String)
          The name of your personal transfer log, or empty if you
          aren't using a transfer log.

     _l_o_g_s_i_z_e (Integer)



NCEMRSoft                 Last change:                          9






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



          The maximum ceiling of your log file, before  the  pro-
          gram removes old entries.

     _m_p_r_o_m_p_t (Boolean)
          If on, prompts for each remote  file  expanded  from  a
          wildcard globbing expression.

     _n_e_t_r_c (String, Read-only)
          Tells you the name of the RC file in use.

     _p_a_g_e_r (String)
          The pathname and flags of the program used  to  display
          output  one  screenful  at  a time.  The default is the
          value of your $PAGER environment variable.

     _p_r_o_m_p_t (String)
          The prompt specification that expands into the prompt.

     _p_r_o_g_r_e_s_s-_r_e_p_o_r_t_s (Integer)
          Which progress meter to use, or 0  if  you  don't  want
          progress reports during file transfers.

     _r_e_c_e_n_t-_l_i_s_t (Boolean)
          If on, uses and updates the _r_e_c_e_n_t-_f_i_l_e.

     _r_e_m_o_t_e-_i_s-_u_n_i_x (Boolean)
          Set automatically by the program upon  connection,  you
          may  need to use this in a startup macro if the program
          guessed that a remote site was UNIX when it  really  is
          not.

     _s_t_a_r_t_u_p-_m_s_g (Boolean)
          If on, prints the opening message and tip.

     _t_i_p_s (Boolean)
          If on, prints a tip on how to use  the  program  better
          each time you run the program.

     _t_y_p_e (String)
          The name of the file transfer  mode  in  use,  such  as
          ``binary'' or ``ascii''.

     _v_e_r_b_o_s_e (String/Integer)
          Controls the amount of output spewed  by  the  program.
          You  can  supply either the first character of the name
          of the verbosity level, or its number:

          _Quiet (-1)
               Won't print any output at all, even  if  an  error
               occurs.

          _Errors Only (0)



NCEMRSoft                 Last change:                         10






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



               No output, except when errors occur.

          _Terse (1)
               Prints errors, and useful output from  the  remote
               host.

          _Verbose (2)
               Prints  everything,  even  junk  output  from  the
               remote end.

Listing a remote directory
     The _l_s and _d_i_r commands perform in a similar manner to those
     of the stock _f_t_p program.

     The _l_s command sends the FTP command ``NLST'' for you.  This
     command  has  been set so that it defaults to always listing
     files in columns (this is the -C option given to the UNIX _l_s
     command)  and  appending  metacharacters  to  each item name
     (this is the -F option), so you  can  see  which  items  are
     directories, files, links, etcetera.  If you don't want your
     items columnized, you can try using the -1 option with _l_s to
     print one item per line.

     The _d_i_r command sends the  FTP  command  ``LIST''  for  you,
     which  instead  of  printing just item names, it prints item
     sizes, owners, dates, and permissions as well.  This command
     is equivalent to ``ls -l'' on most remote systems.

     The usage for both commands is the same.  Here  is  the  one
     for _l_s:

          ls [-_f_l_a_g_s] [_d_i_r_e_c_t_o_r_y _a_n_d _f_i_l_e _n_a_m_e_s] [_r_e_d_i_r_e_c_t_i_o_n]

     Note that in this program, you can  supply  both  flags  and
     items to list in the same command.  The stock version of _f_t_p
     doesn't let you do this:

          ls -lrt /info-mac/help

     Another thing that the program does which the others  should
     have done is let you supply more than one item:

          ls -lrt /info-mac/help /pub /info-mac/README

     You can also redirect the output into a  file,  or  pipe  it
     into something.  This example shows how to list the contents
     of the current remote directory, and save the output into  a
     file in the current local directory:

          ls -t >ls.out





NCEMRSoft                 Last change:                         11






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



     Note that for this to work,  there  must  be  no  whitespace
     between  the  ``>'' and the filename, unlike your shell com-
     mand line which allows for extra whitespace.  This  will  be
     (actually, is) fixed in a future version of the program.

     These examples show how to use a pipe:

          ls -t |tail
          dir -t "|less -CM"
          ls -t "|tail | wc"

     Like the redirection example, there must  be  no  whitespace
     between  the first pipe character and the rest of the stuff.
     The trick is that it has to appear as one  argument  to  the
     commands.   The second and third examples illustrate the use
     of double quotes to squeeze extra parameters in.  The second
     example  can  be  done  without  all  that  typing.  See the
     descriptions of the _p_d_i_r and _p_l_s commands below.

Viewing a remote directory with your pager
     Didn't you hate it when you listed a remote directory,  only
     to  have most of the stuff scrolled off your terminal before
     you could read it?  The _p_l_s and _p_d_i_r commands take  care  of
     this  for  you.   As  you  might  have guessed, they perform
     exactly like their regular counterparts, only you view  them
     with  your  pager.   The  pager  to use is controlled by the
     _p_a_g_e_r program variable.

Redisplaying the last directory listing
     The program saves the listing into a local buffer, so if you
     need  to  see  it again (probably forgot about _p_d_i_r) you can
     use the _r_e_d_i_r and _p_r_e_d_i_r commands for this.

Fetching files from the remote host
     The _g_e_t and _m_g_e_t retrieve remote files for you.   The  usage
     for _g_e_t is:

          get remote-file [local-file or redirection]

     To  fetch  /pub/README  and  write  it  as  a   file   named
     ./junk/readme, try:

          get /pub/README ./junk/readme

     To fetch /pub/README and write it as ./README, just do:

          get /pub/README

     This lets you fetch a file using  its  whole  pathname,  and
     write  a copy of it in the current directory, without having
     to bother with typing a local  filename.   In  the  unlikely
     event  that  you have write permission to a directory called



NCEMRSoft                 Last change:                         12






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



     /pub on your local machine, it  would  write  ``README''  in
     that directory.

     Most of the time the file you want will be  in  the  current
     remote directory, so you can just do these:

          get README
          get README ./junk/readme

     You can also use a redirection for _g_e_t, just  like  you  can
     with the _l_s, _d_i_r, and _r_e_d_i_r commands.  As described earlier,
     you have to conform to the format below for this release  of
     the program:

          get README >/dev/null
          get README |head
          get README "|head -8"
          get README "|less -EMi"

     The  last  example  is  facilitated  by  the  _p_a_g_e   command
     described later.

     The _g_e_t command can also use a  wildcard  expression  in  an
     attempt  to match exactly one remote file.  I call it ``Poor
     Man's File Completion.'' If you've done  a  remote  listing,
     and  you  decide  you want to download a file by the name of
     ``obnoxiouslylongpackagename.tar.Z'', you can  use  ``PMFC''
     to  save  some  keystrokes.   Choose an expression that will
     only match that one file, then use it with _g_e_t:

          get obn*.Z a.tar.Z

     If your pattern was unique, _g_e_t will fetch that  file  only.
     If  the pattern matched more than one file, the program will
     bitch and moan.

     The _m_g_e_t command is used to fetch many files at a time.  The
     difference  between  _g_e_t and _m_g_e_t is that _g_e_t lets you write
     only one file, but you can put it in a different  directory,
     while  _m_g_e_t  fetches  many files, always writing them in the
     current  local  directory.   This  example  fetches  several
     remote files at once:

          mget a.file.Z b.file.Z c.tar d.tar.Z

     The _m_g_e_t command, and its ugly sisters, _m_p_u_t and _m_d_e_l_e_t_e let
     you  use wildcard expressions.  I could have done the previ-
     ous example as:

          mget *.Z c.tar





NCEMRSoft                 Last change:                         13






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



     instead.  The ``m'' commands will verify each file,  if  you
     have the program variable _m_p_r_o_m_p_t set.

Viewing a remote file with your pager
     If you would like to read a file on the remote host  without
     saving  a  copy  of it on your machine, you can use the _p_a_g_e
     (or _m_o_r_e if you wish) command:

          page README
          page obn*README
          page README.Z

     The second example show that you can use ``PMFC''  like  you
     can  for  _g_e_t.  The third example will work also, because if
     the program knows how to decompress the file, it will do  so
     before feeding it to your pager.  As stated earlier, you can
     change the program to use to page  by  setting  the  program
     variable _p_a_g_e_r.

Creating a message file on the remote host
     Use the _c_r_e_a_t_e an empty file on the remote site.   Sometimes
     it  is  necessary  to leave a note if you can't get in touch
     with the remote site's administrator.  For example if a file
     is corrupted, you could try:

          create Foo.tar_is_corrupt

     in hopes that the original uploader will replace it.

Looking up site names and addresses
     You can use the program's  builtin  mini-_n_s_l_o_o_k_u_p  facility.
     If  you  wanted  to know the site's IP number, but only knew
     the name you could do:

          lookup cse.unl.edu

     This would spit out IP number for that site,  in  this  case
     ``129.93.1.12''.   If  you needed to know what a site's name
     was, but only knew the IP number, try:

          lookup 129.93.1.12

     This would spit out the name for that  site,  in  this  case
     ``cse.unl.edu''.

Checking the configuration of the program
     Use the _v_e_r_s_i_o_n command to  print  version  and  compilation
     information  about  the  program.   This  will also tell you
     which optional features are compiled into the program,  such
     as  logging  to the system log and which command line editor
     (if any) has been installed.




NCEMRSoft                 Last change:                         14






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



     The author's email address is listed, and  if  you  need  to
     report something, send the output of this command along with
     your message.

Using the command shell
     Just like the stock _f_t_p program, you  type  commands  to  it
     until  you get bored and hit either ^D or type the _q_u_i_t com-
     mand.

     The program supports links to popular command  line  editing
     libraries.   If  the  person  who  compiled  it  went to the
     effort, you will be able to edit the command line with arrow
     keys and other editing commands, and also scroll up and down
     in the command line history, usually with the  up  and  down
     arrows.   You can check the _v_e_r_s_i_o_n command to see if either
     ``GETLINE'' or ``READLINE'' are installed.

Customizing the prompt
     You can set the shell's prompt string to whatever you  like.
     You  can  use  several metacharacters that expand into some-
     thing  each  prompt.   The  ``%''  flags   are   passed   to
     _s_t_r_f_t_i_m_e(3),  so  you can put the date or time in the prompt
     formatted as you like it:

          set prompt "%I:%M ncftp>"

     That would the current time in the prompt.

     The ``@'' flags are expanded by the program itself.   Here's
     the list of them.

     If you have an ANSI-compatible terminal,  or  you  have  the
     program  variable  _a_n_s_i-_e_s_c_a_p_e_s set, you can use @B, @I, and
     @U to turn on boldface, inverse, and underline text  respec-
     tively (otherwise they won't insert anything).  You can also
     use @R to turn on inverse (reverse) text.  @P sets the  text
     back to plain text.

     @D Inserts the full path of the  current  remote  directory.
     The  @J flag is similar except it inserts only the directory
     name.

     @H Inserts the name of the remote host.  @C inserts the host
     and  current  directory  path  in _c_o_l_o_n-_m_o_d_e format, such as
     ``cse.unl.edu:/pub/mgleason'', or ``(not connected)''.   The
     @c    flag    is    similar,    only    it    will    insert
     ``cse.unl.edu:/pub/mgleason'' and a  newline  if  connected,
     otherwise  it  prints nothing.  The default prompt uses this
     flag to print a two line prompt when  connected  and  a  one
     line prompt when not connected.





NCEMRSoft                 Last change:                         15






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



     @E or @!  inserts the event number (how many commands you've
     typed).

     @M inserts ``(Mail) '' if mail has arrived since running the
     program.

     @N inserts a newline character.

Keeping a log of your file transfers
     You can have the program keep a personal log file.   I  find
     it  is  useful  so  I can see where I got a certain file, or
     what the name of that site was I called two weeks ago.

     To use a log, add:

          #set logfile ~/.ftplog

     (or whatever you want to name the log) to your RC  file.   I
     don't want my log growing too large and using up all my disk
     space, so I also have:

          #set logsize 10240

     in my RC file.  If you set the  limit  on  the  maximum  log
     size,  the  program  will keep the log file at or below that
     size, discarding old entries.

     Note that this is different from having SYSLOG appear in the
     _v_e_r_s_i_o_n command's output.  When this is on, your actions are
     recorded to the system log, so your system administrator can
     make sure you aren't doing anything ``bad.''

Program options
     Remember that you can treat the command line  like  an  _o_p_e_n
     command,  so  all  lowercase  options are passed to the _o_p_e_n
     command, and the uppercase options are handled by  the  main
     program.   The  uppercase options are described below; refer
     to the _o_p_e_n command for descriptions of its options.

     -D _x sets the debugging level to _x.

     -H   runs the _v_e_r_s_i_o_n command and exits, so you can save the
          output of it to use when you need to mail me something.

     -I   toggles the mprompt variable; this is provided for com-
          patibility with ``ftp -i''.

     -N   disables reading of the RC file; this is  provided  for
          compatibility with ``ftp -n''.

     -V _x sets verbosity to level _x (-1,  0,  1,  2)  or  (quiet,
          errs,  terse,  verbose).   See  the  description of the



NCEMRSoft                 Last change:                         16






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



          _v_e_r_b_o_s_e program variable for more information.

     Here  are  some  example  command  lines.   Again,  see  the
     description  of  the _o_p_e_n command (especially _c_o_l_o_n-_m_o_d_e and
     _F_T_P-_c_a_t _m_o_d_e) and all its functions for more information.

     This just enters the _N_c_F_T_P command shell:

          csh> ncftp

     This fetches CONTENTS and then quits:

          csh> ncftp cse.unl.edu:/pub/mgleason/CONTENTS

     Some others examples, with open  options  and  main  program
     options mixed in:

          csh> ncftp -V quiet -u ftp.unl.edu
          csh> ncftp -c cse.unl.edu:/pub/mgleason/CONTENTS
          csh> ncftp -D 2 -r -d 120 -g 10 -N ftp.unl.edu

A sample RC file
     Here is a sample RC file:

          #set logfile ~/.ftplog
          #set progress-reports 2
          #set local-dir /usr/tmp/zz
          #set prompt "@B@E @UNcFTP@P @B@M@D@P ->"

          machine sumex-aim.stanford.edu
                macdef init
                      cd /info-mac
                      get ./help/recent-files.txt "|grep -v '.abs' > sumex
                      !less sumex
                      pwd

          # This site is in here just so I can use ``apple''
          # as an abbreviation.
          machine ftp.apple.com

          # NcFTP will only ask for your password:
          machine cse.unl.edu
                login mgleason

          # You can supply a login and a password:
          machine fake.machine.unl.edu
                login mgleason
                password mypass
                macdef init
                cd ./foo/bar

          # If an antiquated non-UNIX machine doesn't use



NCEMRSoft                 Last change:                         17






NcFTP(1)                 USER COMMANDS                   NcFTP(1)



          # the "SYST" command, you may need to unset
          # remote-is-unix, if the remote host complains
          # about ``ls -CF''.
          machine some.vms.unl.edu
                macdef init
                unset remote-is-unix


AUTHORS
     _N_c_F_T_P   was   written    by    Mike    Gleason,    _N_C_E_M_R_S_o_f_t
     (mgleason@cse.unl.edu),  and based on code by the authors of
     the _f_t_p from the BSD 4.3 distribution.  _N_c_F_T_P is copyrighted
     1992,  1993  by  NCEMRSoft  and 1985, 1989 by the Regents of
     California.

     Ideas and some code contributed  by  Phil  Dietz,  _N_C_E_M_R_S_o_f_t
     (pdietz@cse.unl.edu).   Testing  and  debugging done by Phil
     and Kok Hon Yin (hkok@cse.unl.edu).

     Extensive man page formatting work  by  DaviD  W.  Sanderson
     (dws@ssec.wisc.edu).

BUGS
     Correct execution  of  many  commands  depends  upon  proper
     behavior by the remote server.

     The remote server may drop the connection if you take a long
     time to page remote files.

     Termcap padding is not correctly displayed.

     There  are  no  such  sites  named   _b_o_w_s_e_r._n_i_n_t_e_n_d_o._j_p   or
     _s_p_h_y_g_m_o_m_a_n_o_m_e_t_e_r._u_n_l._e_d_u.

SEE ALSO
     _s_t_r_f_t_i_m_e(3),  _f_t_p_d(8),  _f_t_p(1),  _n_s_l_o_o_k_u_p(1),   _c_o_m_p_r_e_s_s(1),
     _g_z_i_p(1), _z_c_a_t(1), _f_s_p(1), _a_r_c_h_i_e(1), _t_f_t_p(1).


















NCEMRSoft                 Last change:                         18



